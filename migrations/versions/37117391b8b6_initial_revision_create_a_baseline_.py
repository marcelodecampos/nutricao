"""Initial Revision. Create a baseline migrations

Revision ID: 37117391b8b6
Revises:
Create Date: 2025-04-19 13:05:06.524968

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "37117391b8b6"
down_revision: Union[str, None] = "f05b331b1cc1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = "f05b331b1cc1"


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "audit_log",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("target_data", sa.JSON(), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="audit",
    )
    op.create_table(
        "contact_document",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("mask", sa.String(length=128), nullable=True),
        sa.Column("allow_login", sa.Boolean(), server_default="f", nullable=False),
        sa.Column("validation_regex", sa.String(length=128), nullable=True),
        sa.Column("sub_regex", sa.String(length=128), nullable=True),
        sa.Column("contdoc_type", sa.CHAR(), nullable=False),
        sa.Column("person_type", sa.CHAR(), nullable=True),
        sa.Column("is_valid", sa.Boolean(), server_default="t", nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "country",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("alpha_2", sa.String(length=2), nullable=False),
        sa.Column("alpha_3", sa.String(length=3), nullable=False),
        sa.Column("country_code", sa.String(length=3), nullable=False),
        sa.Column("iso_3166_2", sa.String(length=16), nullable=False),
        sa.Column("region", sa.String(length=16), nullable=True),
        sa.Column("sub_region", sa.String(length=32), nullable=True),
        sa.Column("intermediate_region", sa.String(length=32), nullable=True),
        sa.Column("region_code", sa.String(length=3), nullable=True),
        sa.Column("sub_region_code", sa.String(length=3), nullable=True),
        sa.Column("intermediate_region_code", sa.String(length=3), nullable=True),
        sa.Column("is_valid", sa.Boolean(), server_default="t", nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "education",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("is_valid", sa.Boolean(), server_default="t", nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "food_component",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("is_valid", sa.Boolean(), server_default="t", nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "food_group",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("is_valid", sa.Boolean(), server_default="t", nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "gender",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("is_valid", sa.Boolean(), server_default="t", nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "marital_status",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("is_valid", sa.Boolean(), server_default="t", nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("nick_name", sa.String(length=256), nullable=True),
        sa.Column("birthdate", sa.Date(), nullable=True),
        sa.Column("person_type", sa.CHAR(), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        comment="This table uses plural in order to do notconflict with user reserved word in some databases.",
    )
    op.create_index(op.f("ix_users_nick_name"), "users", ["nick_name"], unique=False)
    op.create_table(
        "company",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("cnpj", sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("cnpj"),
    )
    op.create_table(
        "food",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("centific_name", sa.String(length=256), nullable=True),
        sa.Column("brand", sa.String(length=128), nullable=True),
        sa.Column("tbca_id", sa.String(length=128), nullable=True),
        sa.Column("food_group_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["food_group_id"],
            ["food_group.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_food_food_group_id"), "food", ["food_group_id"], unique=False)
    op.create_index(op.f("ix_food_tbca_id"), "food", ["tbca_id"], unique=False)
    op.create_table(
        "login",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("password", sa.String(length=64), nullable=False),
        sa.Column("attempts", sa.Integer(), server_default="0", nullable=False),
        sa.Column("locked", sa.Boolean(), server_default="f", nullable=False),
        sa.Column(
            "password_expires",
            sa.DateTime(timezone=True),
            server_default=sa.text("now() + interval '1 year'"),
            nullable=False,
        ),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "state",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("shortening", sa.String(length=2), nullable=False),
        sa.Column("code", sa.Integer(), nullable=False),
        sa.Column("latitude", sa.Numeric(precision=8, scale=3), nullable=False),
        sa.Column("longitude", sa.Numeric(precision=8, scale=3), nullable=False),
        sa.Column("country_id", sa.BigInteger(), nullable=False),
        sa.Column("is_valid", sa.Boolean(), server_default="t", nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["country.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("shortening"),
    )
    op.create_table(
        "title",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("gender_id", sa.BigInteger(), nullable=True),
        sa.Column("shortening", sa.String(length=32), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["gender_id"],
            ["gender.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "gender_id"),
    )
    op.create_table(
        "user_contact_document",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("contdoc_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("is_main", sa.Boolean(), server_default="f", nullable=False),
        sa.ForeignKeyConstraint(
            ["contdoc_id"],
            ["contact_document.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "contdoc_id", "name"),
    )
    op.create_index(
        op.f("ix_user_contact_document_name"), "user_contact_document", ["name"], unique=False
    )
    op.create_table(
        "city",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("code", sa.String(length=5), nullable=False),
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["state_id"],
            ["state.code"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("state_id", "code", name="uk_city_code_state_id"),
    )
    op.create_index("ix_city_name", "city", ["name"], unique=False)
    op.create_table(
        "food_composition",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("value", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("food_id", sa.BigInteger(), nullable=False),
        sa.Column("food_component_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["food_component_id"],
            ["food_component.id"],
        ),
        sa.ForeignKeyConstraint(
            ["food_id"],
            ["food.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_food_composition_food_component_id"),
        "food_composition",
        ["food_component_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_food_composition_food_id"), "food_composition", ["food_id"], unique=False
    )
    op.create_table(
        "login_audit",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("ip_address", sa.String(length=48), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["login.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "time_created"),
    )
    op.create_index("ix_login_audit_time_created", "login_audit", ["time_created"], unique=False)
    op.create_table(
        "person",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("gender_id", sa.BigInteger(), nullable=True),
        sa.Column("title_id", sa.BigInteger(), nullable=True),
        sa.Column("marital_status_id", sa.BigInteger(), nullable=True),
        sa.Column("education_id", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["education_id"],
            ["education.id"],
        ),
        sa.ForeignKeyConstraint(
            ["gender_id"],
            ["gender.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["marital_status_id"],
            ["marital_status.id"],
        ),
        sa.ForeignKeyConstraint(
            ["title_id"],
            ["title.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "address",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("address", sa.String(length=128), nullable=False),
        sa.Column("complement", sa.String(length=128), nullable=True),
        sa.Column("district", sa.String(length=128), nullable=True),
        sa.Column("zip_code", sa.String(length=10), nullable=False),
        sa.Column("city_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "time_created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["city.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("address")
    op.drop_table("person")
    op.drop_index("ix_login_audit_time_created", table_name="login_audit")
    op.drop_table("login_audit")
    op.drop_index(op.f("ix_food_composition_food_id"), table_name="food_composition")
    op.drop_index(op.f("ix_food_composition_food_component_id"), table_name="food_composition")
    op.drop_table("food_composition")
    op.drop_index("ix_city_name", table_name="city")
    op.drop_table("city")
    op.drop_index(op.f("ix_user_contact_document_name"), table_name="user_contact_document")
    op.drop_table("user_contact_document")
    op.drop_table("title")
    op.drop_table("state")
    op.drop_table("login")
    op.drop_index(op.f("ix_food_tbca_id"), table_name="food")
    op.drop_index(op.f("ix_food_food_group_id"), table_name="food")
    op.drop_table("food")
    op.drop_table("company")
    op.drop_index(op.f("ix_users_nick_name"), table_name="users")
    op.drop_table("users")
    op.drop_table("marital_status")
    op.drop_table("gender")
    op.drop_table("food_group")
    op.drop_table("food_component")
    op.drop_table("education")
    op.drop_table("country")
    op.drop_table("contact_document")
    op.drop_table("audit_log", schema="audit")
    # ### end Alembic commands ###
