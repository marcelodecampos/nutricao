"""Configuring cascade on person table

Revision ID: 97f7d1a28ed9
Revises: 6b6a1934df47
Create Date: 2025-05-03 19:11:48.890337

"""
import sqlalchemy as sa
from typing import Sequence, Union

from sqlalchemy.orm import Session
from alembic import op


# revision identifiers, used by Alembic.
revision: str = '97f7d1a28ed9'
down_revision: Union[str, None] = '6b6a1934df47'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    session:Session = Session(bind=op.get_bind())
    session.commit()
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.text("DROP TABLE IF EXISTS audit.audit_log CASCADE"))
    op.execute(sa.text("CREATE SCHEMA IF NOT EXISTS audit"))
    op.create_table('audit_log',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('target_data', sa.JSON(), nullable=False),
    sa.Column('action', sa.String(length=128), nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='audit'
    )
    op.create_index(op.f('ix_audit_audit_log_action'), 'audit_log', ['action'], unique=False, schema='audit')
    op.drop_constraint('person_id_fkey', 'person', type_='foreignkey')
    op.create_foreign_key(None, 'person', 'users', ['id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.create_foreign_key('person_id_fkey', 'person', 'users', ['id'], ['id'])
    op.drop_index(op.f('ix_audit_audit_log_action'), table_name='audit_log', schema='audit')
    op.drop_table('audit_log', schema='audit')
    # ### end Alembic commands ###
